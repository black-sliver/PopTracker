name: Native Code Static Analysis

on:
  push:
    paths:
      - '**.c'
      - '**.cc'
      - '**.cpp'
      - '**.cxx'
      - '**.h'
      - '**.hh'
      - '**.hpp'
      - '.github/workflows/scan-build.yml'
  pull_request:
    paths:
      - '**.c'
      - '**.cc'
      - '**.cpp'
      - '**.cxx'
      - '**.h'
      - '**.hh'
      - '**.hpp'
      - '.github/workflows/scan-build.yml'

jobs:
  scan-build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            shell: bash
            scan-build: scan-build-19
          - os: windows-latest
            shell: msys2 {0}
            scan-build: scan-build

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: ${{ matrix.shell }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies (apt)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get update -y -qq
          sudo apt-get install coreutils build-essential libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libgtest-dev libgmock-dev
      - name: Install dependencies (msys2)
        if: ${{ startsWith(matrix.os, 'windows') }}
        uses: msys2/setup-msys2@v2
        with:
          release: false
          update: false
          install: >-
            base-devel
            coreutils
            make
            mingw-w64-x86_64-toolchain
            mingw64/mingw-w64-x86_64-SDL2
            mingw64/mingw-w64-x86_64-SDL2_image
            mingw64/mingw-w64-x86_64-SDL2_ttf
            mingw64/mingw-w64-x86_64-freetype
            mingw64/mingw-w64-x86_64-openssl
            mingw64/mingw-w64-x86_64-gtest
            mingw64/mingw-w64-x86_64-clang-analyzer
            p7zip
      - name: Install newer Clang and scan-build command (ubuntu)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          sudo ./llvm.sh 19
          sudo apt install clang-tools-19
      - name: scan-build
        run: |
          ${{ matrix.scan-build }} --status-bugs -o scan-build-reports \
            --exclude build --exclude lib/lua \
            --exclude lib/miniz \
            make -j3
      - name: Store report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: scan-build-reports-${{ matrix.os }}
          path: scan-build-reports
