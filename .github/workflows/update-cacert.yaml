name: Update cacert.pem

on:
  schedule:
    - cron: "0 12 * * 6"  # every Saturday at 12:00
  workflow_dispatch:

permissions:
  pull-requests: write
  contents: write

jobs:
  update-cacert:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check for cacert update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_BRANCH: 'bot/update-cacert-${{ github.ref_name }}'
          PR_MESSAGE: 'Update cacert.pem'
          PR_TITLE: '[Bot] Update cacert.pem'
          PR_BODY: 'Update cacert.pem to latest from curl.se'
        run: |
          make update-cacert
          if git diff --quiet; then
            echo "Already up to date"
          else
            git config --global user.name "github-actions[bot]"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            if git fetch --no-tags --depth=1 origin "$PR_BRANCH:$PR_BRANCH" 2> /dev/null; then
              # branch already exists -> update
              if git diff --quiet "$PR_BRANCH"; then
                echo "PR branch already up to date"
              else
                # update branch
                git stash
                git checkout "$PR_BRANCH"
                git rebase ${{ github.ref_name }}
                git stash pop
                git add .
                git commit --amend -m "$PR_MESSAGE"
                git push -f
                # reopen PR in case it was closed/merged and the branch not deleted
                gh pr create -B ${{ github.ref_name }} --title "$PR_TITLE" --body "$PR_BODY"
              fi
            else
              # new branch
              git checkout -b "$PR_BRANCH"
              git add .
              git commit -m "$PR_MESSAGE"
              git push -u origin "$PR_BRANCH"
              gh pr create -B ${{ github.ref_name }} --title "$PR_TITLE" --body "$PR_BODY"
            fi
          fi
