name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  id-token: 'write'
  attestations: 'write'

jobs:
  release-main:
    runs-on: ubuntu-latest

    steps:
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Package source
      run: |
        POP_NAME=poptracker_`echo ${{ env.RELEASE_VERSION }} | tr '.' '-'`
        cd ..
        tar --exclude-vcs -cJvf "${POP_NAME}_full-source.tar.xz" PopTracker
    - name: Create Release
      uses: softprops/action-gh-release@975c1b265e11dd76618af1c374e7981f9a6ff44a
      with:
        draft: true
        prerelease: true
        name: PopTracker v${{ env.RELEASE_VERSION }}
        body: |
          see [CHANGELOG.md](../v${{ env.RELEASE_VERSION }}/CHANGELOG.md)
          and [README.md](../v${{ env.RELEASE_VERSION }}/README.md)
        files: "../*.tar.xz"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-appimage:
    runs-on: ubuntu-22.04

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install coreutils build-essential libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev p7zip wget libgtest-dev libgmock-dev
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    - name: Set version
      run: |
        sed -i "s/version: latest/version: ${{ env.RELEASE_VERSION }}/g" linux/AppImageBuilder.yml
    - name: Get appimage-builder
      run: |
        wget -q -O appimage-builder https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage
        chmod +x appimage-builder
        ./appimage-builder --appimage-extract
        echo -e '#/bin/sh\n./squashfs-root/AppRun "$@"' > appimage-builder
    - name: Build AppImage
      run: |
        ./appimage-builder --recipe linux/AppImageBuilder.yml
    - name: Attest Build, AppImage and zsync
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: |
          appimage-build/linux-x86_64/poptracker
          *.AppImage*
    - name: Create Release
      uses: softprops/action-gh-release@975c1b265e11dd76618af1c374e7981f9a6ff44a
      with:
        draft: true
        prerelease: true
        name: PopTracker v${{ env.RELEASE_VERSION }}
        files: |
          *.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-ubuntu:
    runs-on: ubuntu-22.04

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install coreutils build-essential libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev p7zip wget libgtest-dev libgmock-dev
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    - name: Build RELEASE
      run: make native CONF=RELEASE VERSION=${{ env.RELEASE_VERSION }} -j4
    - name: Run tests
      run: make test CONF=RELEASE VERSION=${{ env.RELEASE_VERSION }}
    - name: Build DIST # this builds a .tar.xz
      run: make CONF=DIST VERSION=${{ env.RELEASE_VERSION }}
    - name: Attest Build and Archive
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: |
          build/linux-x86_64/poptracker
          dist/*
    - name: Create Release
      uses: softprops/action-gh-release@975c1b265e11dd76618af1c374e7981f9a6ff44a
      with:
        draft: true
        prerelease: true
        name: PopTracker v${{ env.RELEASE_VERSION }}
        files: |
          dist/*.tar.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-macos:
    runs-on: macos-13

    steps:
    - name: Install dependencies
      run: |
        brew install coreutils SDL2 sdl2_ttf sdl2_image openssl@3.0 automake libtool autoconf googletest || true
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    - name: Build RELEASE
      run: make native CONF=RELEASE VERSION=${{ env.RELEASE_VERSION }} -j4
    - name: Run tests
      run: make test CONF=RELEASE VERSION=${{ env.RELEASE_VERSION }}
    - name: Build DIST # this builds the app bundle, zips it and maybe .dmg in the future
      run: make CONF=DIST VERSION=${{ env.RELEASE_VERSION }}
    - name: Attest Build and AppBundle
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: |
          build/darwin-x86_64/poptracker.app/Contents/MacOS/poptracker
          dist/*
    - name: Create Release
      uses: softprops/action-gh-release@975c1b265e11dd76618af1c374e7981f9a6ff44a
      with:
        draft: true
        prerelease: true
        name: PopTracker v${{ env.RELEASE_VERSION }}
        files: |
          dist/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    runs-on: windows-latest

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          coreutils
          make
          mingw-w64-x86_64-toolchain
          autoconf-wrapper
          mingw-w64-x86_64-autotools
          mingw64/mingw-w64-x86_64-SDL2
          mingw64/mingw-w64-x86_64-SDL2_image
          mingw64/mingw-w64-x86_64-SDL2_ttf
          mingw64/mingw-w64-x86_64-freetype
          mingw64/mingw-w64-x86_64-openssl
          mingw64/mingw-w64-x86_64-gtest
          p7zip
          mingw-w64-x86_64-advancecomp
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Build libs
      shell: msys2 {0}
      run: |
        mkdir -p win32-lib-src
        cd win32-lib-src
        ../win32/native-compile-libs-win32.sh
    - name: Uninstall system libs
      shell: msys2 {0}
      run: |
          pacman -R --noconfirm mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL2_image mingw-w64-x86_64-SDL2_ttf
    - name: Set env
      shell: msys2 {0}
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
    - name: Build RELEASE
      shell: msys2 {0}
      run: make native CONF=RELEASE VERSION=${{ env.RELEASE_VERSION }} -j4
    - name: Run tests
      shell: msys2 {0}
      run: make test CONF=RELEASE VERSION=${{ env.RELEASE_VERSION }}
    - name: Build DIST # this builds the app bundle, zips it and maybe .dmg in the future
      shell: msys2 {0}
      run: make CONF=DIST VERSION=${{ env.RELEASE_VERSION }}
    - name: Attest Build and Archive
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: |
          build/win64/poptracker.exe
          dist/*
    - name: Create Release
      uses: softprops/action-gh-release@975c1b265e11dd76618af1c374e7981f9a6ff44a
      with:
        draft: true
        prerelease: true
        name: PopTracker v${{ env.RELEASE_VERSION }}
        files: |
          dist/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # The windows dist zips are created with a custom SDL on a bleeding edge arch linux mingw. See `make cross`.
